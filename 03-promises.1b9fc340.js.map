{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAoBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA3BPL,EAAKc,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAMJ,IAJA,IAAgCC,EAAAjB,EAAKkB,SAA7Bb,EAAwBY,EAAxBZ,MAAOc,EAAiBF,EAAjBE,OAAQC,EAASH,EAATG,KAEnBC,EAAYC,OAAOjB,EAAMkB,OAEpBC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCrB,EAAcqB,EAAGH,GACdI,MAAK,SAAAC,G,OAAO5B,EAAA6B,OAAOC,QAAQF,E,IAC3BG,OAAM,SAAAC,G,OAAShC,EAAA6B,OAAOI,QAAQD,E,IAEjCT,GAAaC,OAAOF,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, amount, step } = form.elements;\n\n  let delayTime = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayTime)\n      .then(sol => Notify.success(sol))\n      .catch(error => Notify.failure(error));\n\n    delayTime += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","addEventListener","evt","preventDefault","_elements","elements","amount","step","delayTime","Number","value","i","then","sol","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.1b9fc340.js.map"}