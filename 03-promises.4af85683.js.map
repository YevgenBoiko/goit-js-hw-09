{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAoBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA3BbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMV,MAAEA,EAAKW,OAAEA,EAAMC,KAAEA,GAASjB,EAAKkB,SAErC,IAAIC,EAAYC,OAAOf,EAAMgB,OAE7B,IAAKC,EAAI,EAAGA,GAAKN,EAAOK,MAAOC,GAAK,EAClCnB,EAAcmB,EAAGH,GACdI,MAAKC,GAAO1B,EAAA2B,OAAOC,QAAQF,KAC3BG,OAAMC,GAAS9B,EAAA2B,OAAOI,QAAQD,KAEjCT,GAAaC,OAAOH,EAAKI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const { delay, amount, step } = form.elements;\n\n  let delayTime = Number(delay.value);\n\n  for (i = 1; i <= amount.value; i += 1) {\n    createPromise(i, delayTime)\n      .then(sol => Notify.success(sol))\n      .catch(error => Notify.failure(error));\n\n    delayTime += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","amount","step","elements","delayTime","Number","value","i","then","sol","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.4af85683.js.map"}